#!/bin/bash

#
# Test an AppDir or AppImage on a given ISO or squashfs base system
#

set -e
# set -x

HERE=$(dirname $(readlink -f "${0}"))
export PATH=$HERE:$PATH

if [ "$1x" == "x" ] ; then
    echo "Please specify a ISO or squashfs base system to run the AppImage on"
    exit 1
fi

if [ "$2x" == "x" ] ; then
    echo "Please specify an AppDir or AppImage to be run"
    exit 1
fi

mkdir -p /tmp/unionfs/root
mkdir -p /tmp/unionfs/rw
mkdir -p /tmp/union
mkdir -p /tmp/iso

# If ISO was specified, then mount it and find contained filesystem
THEFS="$1"
if [ ${1: -4} == ".iso" ] ; then
    ISO="$1"
    mount -o loop,ro "$ISO" /tmp/iso
fi

# In case of Ubuntu-like ISOs
if [ -e /tmp/iso/casper/filesystem.squashfs ] ; then
  THEFS=/tmp/iso/casper/filesystem.squashfs
  mount "$THEFS" /tmp/unionfs/root -o loop,ro || exit 1
fi

# In case of Fedora-like ISOs
if [ -e /tmp/iso/LiveOS/squashfs.img ] ; then
    mount -o loop,ro /tmp/iso/LiveOS/squashfs.img /tmp/iso/
    THEFS=/tmp/iso/LiveOS/ext3fs.img || exit 1
    mount "$THEFS" /tmp/unionfs/root -o loop,ro || exit 1
fi

trap atexit EXIT

atexit()
{    set +e
    umount -l /tmp/union/var/lib/dbus 2>/dev/null
    umount -l /tmp/union/etc/resolv.conf 2>/dev/null
    umount -l /tmp/union/proc 2>/dev/null
    umount -l /tmp/union/boot 2>/dev/null
#    umount -l /tmp/union/automake 2>/dev/null # Puppy
    umount -l /tmp/union 2>/dev/null
    umount -l /tmp/unionfs/root 2>/dev/null
    umount -l /tmp/iso 2>/dev/null
    umount -l /tmp/iso 2>/dev/null
    umount -l /tmp/iso 2>/dev/null
    sudo killall unionfs-fuse
    rm -r /tmp/unionfs/root
    rm -r /tmp/unionfs/rw
    rm -r /tmp/unionfs
    rm -r /tmp/union
    rm -r /tmp/iso
}


unionfs-fuse -o allow_other,use_ino,suid,dev,nonempty -ocow,chroot=/tmp/unionfs/,max_files=32768 /rw=RW:/root=RO /tmp/union

ls /tmp/union/boot >/dev/null && MNT=/boot
# ls /tmp/union/automake >/dev/null && MNT=/automake || echo "" # Puppy

if [ "x$MNT" == "x" ] ; then
    echo "Could not find free mountpoint"
    exit 1
fi

if [ -f "$2" ] ; then
    mount "$2" /tmp/union/$MNT -o loop
elif [ -d "$2" ] ; then
    mount "$2" /tmp/union/$MNT -o bind
fi

cat > /tmp/union/run.sh <<EOF
#!/bin/sh
cat /etc/*release
echo ""
rm -rf /etc/pango
mkdir -p /etc/pango
pango-querymodules > '/etc/pango/pango.modules' # otherwise only squares instead of text
[ -f /si-chroot ] && ln -s /lib/ld-lsb.so.3 /lib/ld-linux.so.2
echo ""
echo "===================================================="
echo ""
LD_LIBRARY_PATH=$MNT/usr/lib:$MNT/lib/:$LD_LIBRARY_PATH ldd $MNT/usr/bin/*  $MNT/usr/lib/* 2>/dev/null | grep "not found" | sort | uniq
echo ""
echo "===================================================="
echo ""
export HOME="/root" 
export LANG="en_EN.UTF-8"
# export QT_PLUGIN_PATH=./lib/qt4/plugins ###################### !!!
dbus-launch $MNT/AppRun || $MNT/AppRun
EOF
chmod a+x /tmp/union/run.sh
mount -t proc proc /tmp/union/proc
mount --bind /var/lib/dbus /tmp/union/var/lib/dbus
touch /tmp/union/etc/resolv.conf || echo ""
mount --bind /etc/resolv.conf /tmp/union/etc/resolv.conf
xhost local: # otherwise "cannot open display: :0.0"
echo ""
echo "===================================================="
echo ""
chroot /tmp/union/ /run.sh # $MNT/AppRun
echo ""
echo "===================================================="
echo ""
exit $?
